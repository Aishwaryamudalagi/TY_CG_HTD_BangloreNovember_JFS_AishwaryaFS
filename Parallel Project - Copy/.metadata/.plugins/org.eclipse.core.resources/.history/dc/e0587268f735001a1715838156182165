package com.capgemini.forestmanagementspringrest.controller;

import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.capgemini.forestmanagementspringrest.dto.Contract;
import com.capgemini.forestmanagementspringrest.dto.ContractResponse;
import com.capgemini.forestmanagementspringrest.services.ContractServices;

@RestController
public class ContractController {
	@Autowired
	private ContractServices service;
	@PostMapping(path = "/add-contract", produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE)
	public ContractResponse addContract(@RequestBody Contract contract) {
		ContractResponse response = new ContractResponse();
		if (service.addContract(contract)){
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("contract added");
		}else {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("Customer with same name already exists");
		}
		return response;
	}
	@DeleteMapping(path = "/delete-contract/{id}", produces = MediaType.APPLICATION_JSON_VALUE)
	public ContractResponse deleteContract(@PathVariable("id") int id) {
		ContractResponse response = new ContractResponse();
		if (service.deleteContract(id)) {
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Contract deleted");
		} else {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("Contract not found");
		}
		return response;
	}
	@GetMapping(path = "/view-allcontracts", produces = MediaType.APPLICATION_JSON_VALUE)
	public ContractResponse getContracts() {
		ContractResponse response = new ContractResponse();
		List<Contract> list = service.getContracts();
		if (list.size() != 0) {
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Contract found");
			response.setContract(list);
		} else {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("No Contract data found");
		}
		return response;
}
	@GetMapping(path = "/view-contract", produces = MediaType.APPLICATION_JSON_VALUE)
	public ContractResponse getContract(@RequestParam("id") int id) {
		ContractResponse response = new ContractResponse();
		Contract contract = service.getContract(id);
		if (contract != null) {
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Contract found");
			response.setContract(Arrays.asList(contract));
		} else {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("Contract id does not exist");
		}
		return response;
	}
}