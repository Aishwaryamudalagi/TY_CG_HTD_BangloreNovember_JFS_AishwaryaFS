package com.capgemini.forestmanagementspringrest.controller;

import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.capgemini.forestmanagementspringrest.dto.Client;
import com.capgemini.forestmanagementspringrest.dto.ClientResponse;
import com.capgemini.forestmanagementspringrest.services.ClientServices;
@RestController
public class ClientController {
	@Autowired
	private ClientServices service;
	
	@PostMapping(path = "/clientlogin", produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE)
	public ClientResponse login(@RequestBody Client bean) {
		ClientResponse response = new ClientResponse();
		Client client = service.login(bean);
		if (client != null) {
			response.setStatusCode(201);
			response.setDescription("Success");
			response.setMessage("Logged in");
			response.setClient(Arrays.asList(client));
		} else {
			response.setStatusCode(405);
			response.setDescription("Failure");
			response.setMessage("Provide valid credentials");
		}
		return response;
	}
	@PostMapping(path = "/add-client", produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE)
	public ClientResponse addClient(@RequestBody Client client) {
		ClientResponse response = new ClientResponse();
		if (service.addClient(client)){
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Client added");
		} else {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("Client with same name already exists");
		}
		return response;
	}
	@DeleteMapping(path = "/delete-client/{id}", produces = MediaType.APPLICATION_JSON_VALUE)
	public ClientResponse deleteClient(@PathVariable("id") String email) {
		ClientResponse response = new ClientResponse();
		if (service.deleteClient(email)) {
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Customer deleted");
		} else {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("Customer not found");
		}
		return response;
	}
	@GetMapping(path = "/view-all-clients", produces = MediaType.APPLICATION_JSON_VALUE)
	public ClientResponse getClients() {
		ClientResponse response = new ClientResponse();
		List<Client> list = service.getClients();
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Customer found");
			response.setClient(list);
		return response;
	}
	@PutMapping(path = "/modify-client", produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE)
	public ClientResponse updateClient(@RequestBody Client client) {
		ClientResponse response = new ClientResponse();
		if (service.updateClient(client.getClientId(),client.getEmail(),client.getPassword(),client.getRole())) {
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Customer updated");
		} else {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("Customer not found");
		}
		return response;
	}
	@GetMapping(path = "/view-client", produces = MediaType.APPLICATION_JSON_VALUE)
	public ClientResponse getClient(@RequestParam("id") int id) {
		ClientResponse response = new ClientResponse();
		Client client = service.getClient(id);
		if (client != null) {
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Customer found");
			response.setClient(Arrays.asList(client));
		} else {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("Customer id does not exist");
		}
		return response;
	}

}
