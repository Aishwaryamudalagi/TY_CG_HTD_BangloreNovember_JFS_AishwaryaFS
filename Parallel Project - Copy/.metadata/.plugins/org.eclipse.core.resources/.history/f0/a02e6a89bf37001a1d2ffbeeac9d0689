package com.capgemini.forestmanagementjdbc.controller;

import java.util.List;
import java.util.Scanner;

import com.capgemini.forestmanagementjdbc.bean.Client;
import com.capgemini.forestmanagementjdbc.exception.DuplicateEntryException;
import com.capgemini.forestmanagementjdbc.factory.ClientFactory;
import com.capgemini.forestmanagementjdbc.services.ClientServices;
import com.capgemini.forestmanagementjdbc.validations.validations;

public class ClientMain {
	public static void main() {
	ClientServices service=ClientFactory.instanceOfClientServices();
	Client bean=new Client();
	Scanner scanner = new Scanner(System.in);
	while(true)
	{
		System.out.println("Press 1 to insert client data...");
		System.out.println("Press 2 to delete client data...");
		System.out.println("press 3 to update client data...");
		System.out.println("Press 4 to get list of all the client...");
		System.out.println("Press 5 to home...");
		int choice=scanner.nextInt();
		switch(choice)
		{
		case 1 :Client beans= new Client(); 
		boolean variable=true;
		while(variable==true) {
			System.out.println("Enter Customer Id");
			String id=scanner.next();
			if(validations.isNumber(id)) {
				int clientId=Integer.parseInt(id);
				variable=false;
				beans.setId(clientId);
			} else {
				System.err.println("Id should contain numbers only");
			}
		}
		boolean emailmatcher=true;
		while(emailmatcher==true) {
			System.out.println("Enter Email Id");
			String email=scanner.next();
			if(validations.validEmail(email)) {
				emailmatcher=false;
				bean.setEmail(email);
			}
			else {
				System.err.println("Provide proper email id");
			}
		}		
		boolean pswd=true;
		while(pswd==true) {
			System.out.println("Enter Password,Password should contain atleast 1 capital letter and 1 special character");
			String password=scanner.next();
			if(validations.passwordValid(password)) {
				pswd=false;
				bean.setPassword(password);
			}
			else {
				System.err.println("Provide proper Password");
			}
		}
		  System.out.println("Enter the role");
		  String role=scanner.next();
		  bean.setRole(role);
		
			boolean check=false;
			try {
				check= service.addClient(bean);
			}catch(DuplicateEntryException e)
			{
				System.err.println(e.toString());
			}
				if(check)
				{
					System.out.println("Client added to list");
				}
				
				
			break;
		case 2 :System.out.println("Enter the Email to delete");
		String email=scanner.next();
		boolean checks=service.deleteClient(email);
		if(checks)
		{
			System.out.println("Client deleted...");
		}
		else
		{
			System.out.println("Client couldnt be delted...");
		}

		break;
		case 3 :
			Client client= new Client(); 
			int clientId=0;
			boolean variables=true;
			while(variables==true) {
				System.out.println("Enter Client Id");
				String id=scanner.next();
				if(validations.isNumber(id)) {
					clientId=Integer.parseInt(id);
					variables=false;
					client.setId(clientId);
				} else {
					System.err.println("Id should contain numbers only");
				}
			}
			boolean emailmatches=true;
			while(emailmatches==true) {
				System.out.println("Enter Email Id");
				String emails=scanner.next();
				if(validations.validEmail(emails)) {
					emailmatches=false;
					client.setEmail(emails);
				}
				else {
					System.err.println("Provide proper email id");
				}
			}		
			boolean pswds=true;
			while(pswds==true) {
				System.out.println("Enter Password,Password should contain atleast 1 capital letter and 1 special character");
				String password=scanner.next();
				if(validations.passwordValid(password)) {
					pswds=false;
					client.setPassword(password);
				}
				else {
					System.err.println("Provide proper Password");
				}
			}
			
			
			
			
			
			
			
			
		System.out.println("Enter the Email");
		String mail=scanner.next();
		Client client=new Client();
		System.out.println("Enter the Password to be modidfied...");
		client.setPassword(scanner.next());
		boolean check11=service.updateClient(mail,client);
		if(check11)
		{
			System.out.println("Client modified...");
		}
		else
		{
			System.out.println("Client couldnt be modified...");
		}

		break;
		case 4: List<Client> l1=service.getClients();
		if(l1!=null)
		{
			for(Client bean1:l1) {
				System.out.println(bean1);
			}
		}
		break;
		case 5:Home.main();
		break;

		
		
		}
	}
}

}
