package com.capgemini.forestmanagementspringrest.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.capgemini.forestmanagementspringrest.dto.Customer;
import com.capgemini.forestmanagementspringrest.dto.CustomerResponse;
import com.capgemini.forestmanagementspringrest.dto.Product;
import com.capgemini.forestmanagementspringrest.dto.ProductResponse;
import com.capgemini.forestmanagementspringrest.services.CustomerServices;

@RestController
public class CustomerController {
	@Autowired
	private CustomerServices service;
	@PostMapping(path = "/add-customer", produces = MediaType.APPLICATION_JSON_VALUE, consumes = MediaType.APPLICATION_JSON_VALUE)
	public CustomerResponse addCustomer(@RequestBody Customer customer) {
		CustomerResponse response = new CustomerResponse();
		if (service.addCustomer(customer)){
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Customer added");
		} else {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("Customer with same name already exists");
		}
		return response;
	}
	@DeleteMapping(path = "/delete-customer/{id}", produces = MediaType.APPLICATION_JSON_VALUE)
	public CustomerResponse deleteCustomer(@PathVariable("id") int id) {
		CustomerResponse response = new CustomerResponse();
		if (service.deleteCustomer(id)) {
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Customer deleted");
		} else {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("Customer not found");
		}
		return response;
	}
	@GetMapping(path = "/view-allcustomers", produces = MediaType.APPLICATION_JSON_VALUE)
	public ProductResponse getCustomers() {
		ProductResponse response = new ProductResponse();
		List<Product> list = service.getProducts();
		if (list.size() != 0) {
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Products found");
			response.setProduct(list);
		} else {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("No data");
		}
		return response;

	}

}
